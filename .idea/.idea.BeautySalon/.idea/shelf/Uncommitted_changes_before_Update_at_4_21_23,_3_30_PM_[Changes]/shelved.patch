Index: BeautySalon/Data/BeautysalonContext.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing Microsoft.EntityFrameworkCore;\r\n\nnamespace BeautySalon.Data.Models;\r\n\r\npublic partial class BeautysalonContext : DbContext\r\n{\r\n    public BeautysalonContext()\r\n    {\r\n    }\r\n\r\n    public BeautysalonContext(DbContextOptions<BeautysalonContext> options)\r\n        : base(options)\r\n    {\r\n    }\r\n\r\n    public virtual DbSet<Attendance> Attendances { get; set; }\r\n\r\n    public virtual DbSet<Client> Clients { get; set; }\r\n\r\n    public virtual DbSet<Employee> Employees { get; set; }\r\n\r\n    public virtual DbSet<Position> Positions { get; set; }\r\n\r\n    public virtual DbSet<Schedule> Schedules { get; set; }\r\n\r\n    public virtual DbSet<Service> Services { get; set; }\r\n\r\n    public virtual DbSet<Serviceprovision> Serviceprovisions { get; set; }\r\n\r\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\r\n#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.\r\n        => optionsBuilder.UseNpgsql(\"Host=localhost;Database=beautysalon\");\r\n\r\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\r\n    {\r\n        modelBuilder.Entity<Attendance>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"attendances_pkey\");\r\n\n            entity.ToTable(\"attendances\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.Clientid).HasColumnName(\"clientid\");\r\n\n            entity.HasOne(d => d.Client).WithMany(p => p.Attendances)\n                .HasForeignKey(d => d.Clientid)\n                .HasConstraintName(\"attendances_clientid_fkey\");\r\n        });\r\n\n        modelBuilder.Entity<Client>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"clients_pkey\");\r\n\n            entity.ToTable(\"clients\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.Name)\n                .HasColumnType(\"character varying\")\n                .HasColumnName(\"name\");\r\n            entity.Property(e => e.Phone).HasColumnName(\"phone\");\r\n        });\r\n\n        modelBuilder.Entity<Employee>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"employees_pkey\");\r\n\n            entity.ToTable(\"employees\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.Name)\n                .HasColumnType(\"character varying\")\n                .HasColumnName(\"name\");\r\n            entity.Property(e => e.Phone).HasColumnName(\"phone\");\r\n\n            entity.HasMany(d => d.Pos).WithMany(p => p.Emps)\r\n                .UsingEntity<Dictionary<string, object>>(\r\n                    \"Employeesonposition\",\r\n                    r => r.HasOne<Position>().WithMany()\n                        .HasForeignKey(\"Posid\")\n                        .OnDelete(DeleteBehavior.ClientSetNull)\n                        .HasConstraintName(\"fkposid\"),\r\n                    l => l.HasOne<Employee>().WithMany()\n                        .HasForeignKey(\"Empid\")\n                        .OnDelete(DeleteBehavior.ClientSetNull)\n                        .HasConstraintName(\"fkempid\"),\r\n                    j =>\r\n                    {\r\n                        j.HasKey(\"Empid\", \"Posid\").HasName(\"pkemponposid\");\r\n                        j.ToTable(\"employeesonpositions\");\r\n                        j.IndexerProperty<long>(\"Empid\").HasColumnName(\"empid\");\r\n                        j.IndexerProperty<long>(\"Posid\").HasColumnName(\"posid\");\r\n                    });\r\n        });\r\n\n        modelBuilder.Entity<Position>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"positions_pkey\");\r\n\n            entity.ToTable(\"positions\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.Name)\n                .HasMaxLength(50)\n                .HasColumnName(\"name\");\r\n        });\r\n\n        modelBuilder.Entity<Schedule>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"schedules_pkey\");\r\n\n            entity.ToTable(\"schedules\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.Date).HasColumnName(\"date\");\r\n            entity.Property(e => e.Empid).HasColumnName(\"empid\");\r\n            entity.Property(e => e.Status)\n                .HasMaxLength(1)\n                .HasColumnName(\"status\");\r\n\n            entity.HasOne(d => d.Emp).WithMany(p => p.Schedules)\n                .HasForeignKey(d => d.Empid)\n                .HasConstraintName(\"schedules_empid_fkey\");\r\n        });\r\n\n        modelBuilder.Entity<Service>(entity =>\r\n        {\r\n            entity.HasKey(e => e.Id).HasName(\"services_pkey\");\r\n\n            entity.ToTable(\"services\");\r\n\n            entity.Property(e => e.Id)\n                .UseIdentityAlwaysColumn()\n                .HasColumnName(\"id\");\r\n            entity.Property(e => e.About)\n                .HasColumnType(\"character varying\")\n                .HasColumnName(\"about\");\r\n            entity.Property(e => e.Name)\n                .HasColumnType(\"character varying\")\n                .HasColumnName(\"name\");\r\n            entity.Property(e => e.Posid).HasColumnName(\"posid\");\r\n\n            entity.HasOne(d => d.Pos).WithMany(p => p.Services)\n                .HasForeignKey(d => d.Posid)\n                .HasConstraintName(\"services_posid_fkey\");\r\n        });\r\n\n        modelBuilder.Entity<Serviceprovision>(entity =>\r\n        {\r\n            entity.HasKey(e => new { e.Attid, e.Serid }).HasName(\"pkserprov\");\r\n\n            entity.ToTable(\"serviceprovisions\");\r\n\n            entity.Property(e => e.Attid).HasColumnName(\"attid\");\r\n            entity.Property(e => e.Serid).HasColumnName(\"serid\");\r\n            entity.Property(e => e.Schid).HasColumnName(\"schid\");\r\n\n            entity.HasOne(d => d.Att).WithMany(p => p.Serviceprovisions)\n                .HasForeignKey(d => d.Attid)\n                .OnDelete(DeleteBehavior.ClientSetNull)\n                .HasConstraintName(\"fkattid\");\r\n\n            entity.HasOne(d => d.Sch).WithMany(p => p.Serviceprovisions)\n                .HasForeignKey(d => d.Schid)\n                .HasConstraintName(\"fkschid\");\r\n\n            entity.HasOne(d => d.Ser).WithMany(p => p.Serviceprovisions)\n                .HasForeignKey(d => d.Serid)\n                .OnDelete(DeleteBehavior.ClientSetNull)\n                .HasConstraintName(\"fkserid\");\r\n        });\r\n\n        OnModelCreatingPartial(modelBuilder);\r\n    }\r\n\r\n    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BeautySalon/Data/BeautysalonContext.cs b/BeautySalon/Data/BeautysalonContext.cs
--- a/BeautySalon/Data/BeautysalonContext.cs	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/BeautySalon/Data/BeautysalonContext.cs	(date 1682016891000)
@@ -31,7 +31,7 @@
 
     protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
 #warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
-        => optionsBuilder.UseNpgsql("Host=localhost;Database=beautysalon");
+        => optionsBuilder.UseNpgsql("Host=localhost;Database=postgres");
 
     protected override void OnModelCreating(ModelBuilder modelBuilder)
     {
Index: BeautySalon/Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n\nbuilder.Services.AddControllersWithViews().AddRazorRuntimeCompilation();\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\n\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\n    if (!app.Environment.IsDevelopment())\n    {\n        app.UseExceptionHandler(\"/Home/Error\");\n        // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\n        app.UseHsts();\n    }\n\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.UseRouting();\n\napp.UseAuthorization();\n\napp.MapControllerRoute(\n    name: \"default\",\n    pattern: \"{controller=Home}/{action=Index}/{id?}\");\n\napp.Run();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BeautySalon/Program.cs b/BeautySalon/Program.cs
--- a/BeautySalon/Program.cs	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/BeautySalon/Program.cs	(date 1682016525000)
@@ -1,8 +1,12 @@
+using System.Configuration;
+using BeautySalon.Data.Models;
+using Microsoft.EntityFrameworkCore;
 var builder = WebApplication.CreateBuilder(args);
 
 // Add services to the container.
 
 builder.Services.AddControllersWithViews().AddRazorRuntimeCompilation();
+builder.Services.AddDbContext<BeautysalonContext>(options => options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));
 // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
 
 
@@ -22,8 +26,5 @@
 
 app.UseAuthorization();
 
-app.MapControllerRoute(
-    name: "default",
-    pattern: "{controller=Home}/{action=Index}/{id?}");
 
 app.Run();
\ No newline at end of file
Index: BeautySalon/appsettings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft.AspNetCore\": \"Warning\"\n    }\n  },\n  \"AllowedHosts\": \"*\"\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BeautySalon/appsettings.json b/BeautySalon/appsettings.json
--- a/BeautySalon/appsettings.json	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/BeautySalon/appsettings.json	(date 1682016825000)
@@ -5,5 +5,8 @@
       "Microsoft.AspNetCore": "Warning"
     }
   },
-  "AllowedHosts": "*"
+  "AllowedHosts": "*",
+  "ConnectionStrings": {
+    "DefaultConnection": "Host=localhost;Port=5433;Database=postgres;Username=postgres;Password=zyd11012004"
+  }
 }
Index: BeautySalon/Controllers/HomeController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Diagnostics;\nusing Microsoft.AspNetCore.Mvc;\nusing BeautySalon.Data;\n\nnamespace BeautySalon.Controllers;\n\npublic class HomeController : Controller\n{\n    private readonly ILogger<HomeController> _logger;\n\n    public HomeController(ILogger<HomeController> logger)\n    {\n        _logger = logger;\n    }\n\n    public IActionResult Index()\n    {\n        return View();\n    }\n\n    public IActionResult Privacy()\n    {\n        return View();\n    }\n\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BeautySalon/Controllers/HomeController.cs b/BeautySalon/Controllers/HomeController.cs
--- a/BeautySalon/Controllers/HomeController.cs	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/BeautySalon/Controllers/HomeController.cs	(date 1682015691000)
@@ -23,9 +23,4 @@
         return View();
     }
 
-    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
-    public IActionResult Error()
-    {
-        return View();
-    }
 }
\ No newline at end of file
Index: BeautySalon/BeautySalon.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.Web\">\n\n    <PropertyGroup>\n        <TargetFramework>net6.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"6.0.16\" />\n        <PackageReference Include=\"Microsoft.AspNetCore.Razor.Runtime\" Version=\"2.2.0\" />\n        <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"8.0.0-preview.3.23174.2\" />\n        <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"8.0.0-preview.3.23174.2\">\n          <PrivateAssets>all</PrivateAssets>\n          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n        </PackageReference>\n        <PackageReference Include=\"Microsoft.EntityFrameworkCore.Sqlite\" Version=\"6.0.16\" />\n        <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"6.0.16\" />\n        <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"8.0.0-preview.3.23174.2\">\n          <PrivateAssets>all</PrivateAssets>\n          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n        </PackageReference>\n        <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"6.0.13\" />\n        <PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"8.0.0-preview.2\" />\n        <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"6.2.3\" />\n    </ItemGroup>\n\n    <ItemGroup>\n      <Folder Include=\"Data\\Models\" />\n    </ItemGroup>\n\n</Project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BeautySalon/BeautySalon.csproj b/BeautySalon/BeautySalon.csproj
--- a/BeautySalon/BeautySalon.csproj	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/BeautySalon/BeautySalon.csproj	(date 1682016377000)
@@ -22,6 +22,7 @@
         </PackageReference>
         <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.13" />
         <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="8.0.0-preview.2" />
+        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.Design" Version="1.1.0" />
         <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
     </ItemGroup>
 
Index: .idea/.idea.BeautySalon/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoGeneratedRunConfigurationManager\">\n    <projectFile profileName=\"BeautySalon\">BeautySalon/BeautySalon.csproj</projectFile>\n    <projectFile profileName=\"IIS Express\">BeautySalon/BeautySalon.csproj</projectFile>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5f4c02a9-6500-40cc-bb58-b3be94f69ef2\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.BeautySalon/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.BeautySalon/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/BeautySalon.csproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BeautySalon/BeautySalon.csproj\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/Controllers/WeatherForecastController.cs\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/Program.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BeautySalon/Program.cs\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/Properties/launchSettings.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/BeautySalon/Properties/launchSettings.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/Views/Shared/_ValidationScriptsPartial.cshtml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/BeautySalon/WeatherForecast.cs\" beforeDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"HTML File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2OeUR1O4x04Ij2ePCxsnXrow0ZT\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"rider.external.source.directories\": [\n      \"C:\\\\Users\\\\Azalia\\\\AppData\\\\Roaming\\\\JetBrains\\\\Rider2023.1\\\\resharper-host\\\\DecompilerCache\",\n      \"C:\\\\Users\\\\Azalia\\\\AppData\\\\Roaming\\\\JetBrains\\\\Rider2023.1\\\\resharper-host\\\\SourcesCache\",\n      \"C:\\\\Users\\\\Azalia\\\\AppData\\\\Local\\\\Symbols\\\\src\"\n    ]\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\".NET Launch Settings Profile.BeautySalon: IIS Express\">\n    <configuration name=\"BeautySalon\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/BeautySalon/BeautySalon.csproj\" />\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"BeautySalon\" />\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\n      <option name=\"USE_MONO\" value=\"0\" />\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\n      <method v=\"2\">\n        <option name=\"Build\" />\n      </method>\n    </configuration>\n    <configuration name=\"BeautySalon: IIS Express\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\">\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/BeautySalon/BeautySalon.csproj\" />\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net6.0\" />\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"IIS Express\" />\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\n      <option name=\"USE_MONO\" value=\"0\" />\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\n      <method v=\"2\">\n        <option name=\"Build\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5f4c02a9-6500-40cc-bb58-b3be94f69ef2\" name=\"Changes\" comment=\"\" />\n      <created>1681920537998</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1681920537998</updated>\n      <workItem from=\"1681920550247\" duration=\"3495000\" />\n      <workItem from=\"1681925991652\" duration=\"157000\" />\n      <workItem from=\"1681993453517\" duration=\"2407000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.BeautySalon/.idea/workspace.xml b/.idea/.idea.BeautySalon/.idea/workspace.xml
--- a/.idea/.idea.BeautySalon/.idea/workspace.xml	(revision a319d38c3b0f2c9676241a167f11a2d762559054)
+++ b/.idea/.idea.BeautySalon/.idea/workspace.xml	(date 1682080244000)
@@ -4,30 +4,21 @@
     <projectFile profileName="BeautySalon">BeautySalon/BeautySalon.csproj</projectFile>
     <projectFile profileName="IIS Express">BeautySalon/BeautySalon.csproj</projectFile>
   </component>
-  <component name="AutoImportSettings">
-    <option name="autoReloadType" value="SELECTIVE" />
-  </component>
   <component name="ChangeListManager">
     <list default="true" id="5f4c02a9-6500-40cc-bb58-b3be94f69ef2" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.BeautySalon/.idea/.name" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.BeautySalon/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.BeautySalon/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/BeautySalon/BeautySalon.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/BeautySalon.csproj" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BeautySalon/Controllers/WeatherForecastController.cs" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/BeautySalon/Controllers/HomeController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/Controllers/HomeController.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/BeautySalon/Data/BeautysalonContext.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/Data/BeautysalonContext.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/BeautySalon/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/Program.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BeautySalon/Properties/launchSettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/Properties/launchSettings.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/BeautySalon/Views/Shared/_ValidationScriptsPartial.cshtml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/BeautySalon/WeatherForecast.cs" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/BeautySalon/Views/Shared/_ViewImports" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/BeautySalon/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/BeautySalon/appsettings.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileTemplateManagerImpl">
-    <option name="RECENT_TEMPLATES">
-      <list>
-        <option value="HTML File" />
-      </list>
-    </option>
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -40,27 +31,15 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "DefaultHtmlFileTemplate": "HTML File",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "vue.rearranger.settings.migration": "true"
-  },
-  "keyToStringList": {
-    "rider.external.source.directories": [
-      "C:\\Users\\Azalia\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\DecompilerCache",
-      "C:\\Users\\Azalia\\AppData\\Roaming\\JetBrains\\Rider2023.1\\resharper-host\\SourcesCache",
-      "C:\\Users\\Azalia\\AppData\\Local\\Symbols\\src"
-    ]
-  }
-}]]></component>
-  <component name="RunManager" selected=".NET Launch Settings Profile.BeautySalon: IIS Express">
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="settings.editor.selected.configurable" value="preferences.sourceCode.C#" />
+    <property name="vue.rearranger.settings.migration" value="true" />
+  </component>
+  <component name="RunManager" selected=".NET Launch Settings Profile.BeautySalon">
     <configuration name="BeautySalon" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
       <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BeautySalon/BeautySalon.csproj" />
       <option name="LAUNCH_PROFILE_TFM" value="net6.0" />
@@ -102,7 +81,8 @@
       <updated>1681920537998</updated>
       <workItem from="1681920550247" duration="3495000" />
       <workItem from="1681925991652" duration="157000" />
-      <workItem from="1681993453517" duration="2407000" />
+      <workItem from="1682015348178" duration="1531000" />
+      <workItem from="1682079348573" duration="598000" />
     </task>
     <servers />
   </component>
